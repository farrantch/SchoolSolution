@model SchoolSolution.ViewModels.RegisterModel
@{
    ViewBag.Title = "Register";
}

<hgroup class="title">
    <h1>@ViewBag.Title.</h1>
    <h2>Create a new account.</h2>
</hgroup>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()

    <fieldset>
        <legend>Registration Form</legend>
        <ol>
            <li>
                @Html.LabelFor(m => m.UserName)
                @Html.TextBoxFor(m => m.UserName)
            </li>
            <li>
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password)
            </li>
            <li>
                @Html.LabelFor(m => m.ConfirmPassword)
                @Html.PasswordFor(m => m.ConfirmPassword)
            </li>
            <li>
                @Html.LabelFor(m => m.FirstName)
                @Html.TextBoxFor(m => m.FirstName)
            </li>
            <li>
                @Html.LabelFor(m => m.MiddleName)
                @Html.TextBoxFor(m => m.MiddleName)
            </li>
            <li>
                @Html.LabelFor(m => m.LastName)
                @Html.TextBoxFor(m => m.LastName)
            </li>
            <li>
                @Html.LabelFor(m => m.Email)
                @Html.TextBoxFor(m => m.Email)
            </li>
            <li>
                @Html.LabelFor(model => model.Gender)
                @Html.DropDownListFor(model => model.Gender, (SelectList)ViewBag.GenderList, "Select...")
            </li>
@*           <li>
                @Html.LabelFor(m => m.BirthDate)
            </li>
            <li>
                @Html.DropDownList("month", Enumerable.Range(1, 12).Select(i => new SelectListItem { Value = i.ToString(), Text = System.Globalization.CultureInfo.InvariantCulture.DateTimeFormat.GetMonthName(i)}), "-- Select Month --")
                @Html.DropDownList("day", Enumerable.Range(1, 31).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString()}), "-- Select Day --")
                @Html.DropDownList("year", Enumerable.Range(1900, 109).Select(i => new SelectListItem { Value = i.ToString(), Text = i.ToString()}), "-- Select Year --")
            </li>*@
            <li>
                @Html.LabelFor(model => model.Country)
@*                @Html.DropDownListFor(model => model.Country, (SelectList)ViewBag.CountryList, "Select...", new { onchange = "FetchStates();" })*@
@*               <span data-bind="visible: StateProvince().length > 0">@Html.LabelFor(model => model.StateProvince) <select data-bind="options: StateProvince, optionsText: 'StateId', optionsValue: 'StateId', optionsCaption: 'Choose...'"></select></span>*@
                Select Country: @Html.DropDownList("ddlCountry", ViewBag.CountryList as SelectList, "Select...", new { onchange = "FetchStates();" })
                <span data-bind="visible:states().length > 0">
                    Select State: <select id="ddlStates" data-bind="options: states, optionsText: 'StateName', optionsValue: 'StateId', optionsCaption: 'Choose...'"></select>
                </span>
            </li>
            <li>
                @Html.LabelFor(m => m.Address)
                @Html.TextBoxFor(m => m.Address)
            </li>
            <li>
                @Html.LabelFor(m => m.ApartmentNumber)
                @Html.TextBoxFor(m => m.ApartmentNumber)
            </li>
            <li>
                @Html.LabelFor(m => m.ZipCode)
                @Html.TextBoxFor(m => m.ZipCode)
            </li>
        </ol>
        <input type="submit" value="Submit Registration" />
    </fieldset>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
@*    @Scripts.Render("~/Scripts/CascadingDDL.js")*@
}

<script type="text/javascript">

    function CascadingDDLViewModel() {
        this.states = ko.observableArray([]);
    }

    var objVM = new CascadingDDLViewModel();
    ko.applyBindings(objVM);

    function FetchStates() {
        var countryCode = $("#ddlCountry").val();
        $.getJSON("/Home/GetStates/" + countryCode, null, function (data) {
            objVM.states(data);
        });
    }

</script>